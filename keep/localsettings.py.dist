# Django local settings for digital masters project.

#Celery Config
BROKER_HOST = "" # e.g "localhost"
BROKER_PORT =    # e.g 5672
BROKER_USER = "" # e.g "user"
BROKER_PASSWORD = "" #e.g. "password"
BROKER_VHOST = "" # e.g. "digitalmasters_vhost"
CELERY_RESULT_BACKEND = "" # e.g "amqp"

# all settings in debug section should be false in production environment
DEBUG = True
TEMPLATE_DEBUG = DEBUG
DEV_ENV = True

SERVER_EMAIL = ''       # email where default messages come from; django default is root@localhost
EMAIL_SUBJECT_PREFIX = '[Keep] ' # prefix for email subjects

# if True the beta warning banner is displayed on the site
ENABLE_BETA_WARNING = False

# IP addresses that should be allowed to see DEBUG info
INTERNAL_IPS = ('127.0.0.1', '127.0.1.1', )

ADMINS = (
    # ('Your Name', 'your_email@domain.com'),
)

MANAGERS = ADMINS

EMAIL_SUBJECT_PREFIX = '[Keep] '

DATABASES = {
    # default database - used for the django site
    'default': {
        'ENGINE': 'django.db.backends.', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': '',                      # Or path to database file if using sqlite3.
        'USER': '',                      # Not used with sqlite3.
        'PASSWORD': '',                  # Not used with sqlite3.
        'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '',                      # Set to empty string for default. Not used with sqlite3.
    },
}

import ldap
from django_auth_ldap.config import LDAPSearch

AUTH_LDAP_SERVER_URI = 'ldaps://ldap.co'
AUTH_LDAP_BIND_DN = ''     # DN of the  base LDAP user (e.g., 'uid=foo,ou=bar,o=emory.edu')
AUTH_LDAP_BIND_PASSWORD = ''           # password for that user
AUTH_LDAP_USER_SEARCH = LDAPSearch("o=...",   ldap.SCOPE_SUBTREE, "(uid=%(user)s)")

AUTH_LDAP_USER_ATTR_MAP = {
    'first_name': 'givenName',
    'last_name': 'sn',
    'email': 'mail',
    # 'phone': 'telephoneNumber',
    # 'dept_num': 'departmentNumber',
    # 'full_name': 'cn',
    'title': 'title',
}


# Fedora Repository settings
FEDORA_ROOT = 'http://localhost:8080/fedora/'
FEDORA_USER = 'fedoraAdmin'
FEDORA_PASSWORD = 'fedoraAdmin'
FEDORA_PIDSPACE = 'changeme'
FEDORA_TEST_ROOT = 'http://localhost:8180/fedora/'
# use this to explicitly configure a test pidspace; by default, uses pidspace-test
#FEDORA_TEST_PIDSPACE = 'testme'

# Fedora user with access to manage content; used for migration and management scripts
FEDORA_MANAGEMENT_USER = ''
FEDORA_MANAGEMENT_PASSWORD = ''

# Exist DB Settings
EXISTDB_SERVER_URL      = 'http://user:password@existdb.example.com/exist/xmlrpc'
# collection should begin with / -  e.g., /edc
EXISTDB_ROOT_COLLECTION = ''
# use this to explicitly set test collection; by default, uses collection_test
# EXISTDB_TEST_COLLECTION = ''

# pidman PID generation
PIDMAN_HOST = 'https://pid.emory.edu/' # the web root where we'll ask for pids
PIDMAN_USER = 'exampleuser'
PIDMAN_PASSWORD = 'examplepass'
PIDMAN_DOMAIN = 'http://pid.emory.edu/domains/42/' # the full url of the domain we'll create pids in

# special case settings for rushdie pid cleanup & reuse
PIDMAN_RUSHDIE_DOMAIN = ''
PIDMAN_RUSHDIE_UNUSED = 'Unallocated Rushdie pid'
PIDMAN_RUSHDIE_UNUSED_URI = ''

# django caching - see http://docs.djangoproject.com/en/dev/topics/cache/
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': '/var/tmp/keep_cache',
    }
}


# for Developers only: to use sessions in runserver, uncomment this line (override configuration in settings.py)
#SESSION_COOKIE_SECURE = False

# configure which IP addresses are allowed to access the index data service
EUL_INDEXER_ALLOWED_IPS = 'ANY'
# Solr index that will be used for searching
SOLR_SERVER_URL = "http://localhost:8080/solr/"
# optional CA cert path (if Solr is SSL and using a cert not auto-loaded by httplib2)
#SOLR_CA_CERT_PATH = '/etc/ssl/certs/ca-certificates.crt'


# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# If running in a Windows environment this must be set to the same as your
# system time zone.
TIME_ZONE = 'America/New_York'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'en-us'

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = True

# If you set this to False, Django will not format dates, numbers and
# calendars according to the current locale
USE_L10N = True

# Make this unique, and don't share it with anybody.
SECRET_KEY = ''

SITE_ID = 1

# settings for ingest staging directory
INGEST_STAGING_TEMP_DIR = '/tmp/digitalmasters-ingest-staging'
# time in seconds that files in the ingest staging directory should be kept
INGEST_STAGING_KEEP_AGE = 60*60*24*3

# Settings for staging area for large-file ingest workflow
# - directory as mounted on the Django app server
LARGE_FILE_STAGING_DIR = '/path/to/inbound/data'
# - directory on Fedora server, if path is different
# LARGE_FILE_STAGING_FEDORA_DIR = '/home/fedora/inbound'

# Allowable discrepancy between duration of original file and converted access copy
# Recommended: set to something around 1.0 - 1.5
AUDIO_ALLOWED_DURATION_DISCREPANCY = 1.5

# link to the Keep manual
KEEP_MANUAL_URL = ''

# list of IPs that can access the site during downtime periods
# DOWNTIME_ALLOWED_IPS = ['127.0.0.1']

# settings to use local javascript and disable analytics on the
# researcher machine in the reading room
EULTHEME_NO_EXTERNAL_JS = True
RESEARCHER_NO_ANALYTICS = True

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'basic': {
            'format': '[%(asctime)s] %(levelname)s:%(name)s::%(message)s',
            'datefmt': '%d/%b/%Y %H:%M:%S',
         },
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        'null': {
            'level':'DEBUG',
            'class':'django.utils.log.NullHandler',
        },
        'console':{
            'level':'DEBUG',
            'class':'logging.StreamHandler',
            'formatter': 'basic'
        },
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler',
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename' : '/path/to/log',
            'formatter': 'basic'
        }
    },
    'loggers': {
        'django': {
            'handlers':['null'],
            'propagate': True,
            'level':'INFO',
        },
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': False,
        },
        'eulfedora': {
            'handlers':['console', 'file'],
            'propagate': True,
            'level':'INFO',
        },
        'keep': {
            'handlers':['console', 'file'],
            'propagate': True,
            'level':'INFO',
            }
        }
    }
